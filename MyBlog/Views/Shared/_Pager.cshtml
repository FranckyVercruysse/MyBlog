@model MyBlog.Models.View_Models.ListViewModel

@* Read the current page and total pages *@
@{
    var currentPage = !String.IsNullOrEmpty(ViewContext.HttpContext.Request.Query["p"])
        ? int.Parse(ViewContext.HttpContext.Request.Query["p"])
        : 1;

    var totalPages = Math.Ceiling((double)Model.TotalPosts / Model.PostsPerPage);
}

@* Check do we need to display pagination links *@

@if (currentPage > 1 || currentPage < totalPages)
{
    var p = string.Format("p={0}", currentPage - 1);
    var n = string.Format("p={0}", currentPage + 1);

    @* If the view is rendered for "search" action append the pagination value with "&" *@

if (ViewContext.RouteData.Values["action"].ToString()
.Equals("search", StringComparison.OrdinalIgnoreCase))
{
    var s = String.Format("?s={0}", ViewContext.HttpContext.Request.Query["s"]);
    p = String.Format("{0}&{1}", s, p);
    n = String.Format("{0}&{1}", s, n);
}
else
{
    p = String.Concat("?", p);
    n = String.Concat("?", n);
}

  <!--pagination links-->
    <div class="pager mb-5">
        <span class="text-left pull-left" style="visibility:@(currentPage > 1 ? "visible" : "hidden")">
            <a href="@p" title="Previous" class="text-left">←Newer</a>
        </span>
        <span class="pull-right" style="visibility:@(currentPage < totalPages ? "visible" : "hidden")">
            <a href="@n" title="Next" class="text-right"
                       style="visibility:@(currentPage < totalPages ? "visible" : "hidden")">Older→</a>
        </span>
    </div>
}